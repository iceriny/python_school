# 集合和字典也有一定相似度
# 但集合不是键值对
# 集合是包含一系列成员的容器
# 集合没有索引，所以不能使用索引访问集合中的元素
# 同时集合的成员不能出现重复
# 当重复添加集合的成员时，Python会自动忽略重复的成员

# 创建集合
s = set() # 空集合只能使用set() 因为`{}`是创建空字典的语法
s = {1, 2, 3, 4, 5}

# 集合的成员不能重复
s = {1, 2, 3, 4, 5, 1, 2, 3, 4, 5}
print(s)
# 这也展示了去重的功能
# 我们可以运用集合对列表去重
l = [1, 2, 3, 4, 5, 1, 2, 3, 4, 5]
print(set(l))
# 将上面的列表转换为集合
# 这样就变成了拥有了一个 `包含`l`的全部成员，但是去掉重复的成员`的集合

print("-------分割线-------")
# 集合可以进行运算
s1 = {1, 2, 3, 4, 5}
s2 = {4, 5, 6, 7, 8}
print("并集", s1 | s2)
print("交集", s1 & s2)
print("差集", s1 - s2)
print("非共成员", s1 ^ s2)
# 如果理解数学中的`集合`的概念，那么集合运算就非常容易理解
# 并集 代表将两个集合合并成一个包括他们所有成员的大集合
# 交集 代表两个集合中相同成员的新的集合
# 差集 代表第一个集合的成员 去掉 第二个集合的成员 得到的集合
# 非共成员 代表两个集合不同时出现的成员

print("-------分割线-------")
# 添加和移除元素
s = {1, 2, 3, 4, 5}
s.add(6)
print(s)
s.remove(6)
print(s)
s.discard(6) # 这个移除元素和remove的区别在于，如果元素不存在，discard不会报错
print(s)



print("-------分割线-------")
# 同样也有`len` `clean` `in` `not in`这些用法 参考`字典`，这里就不做展示了
# 内置方法参考链接: https://www.runoob.com/python3/python3-set.html 翻到最下面的`集合内置方法完整列表`部分
